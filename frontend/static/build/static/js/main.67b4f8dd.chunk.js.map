{"version":3,"sources":["components/ChatList.js","components/Registration.js","components/Login.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatList","props","state","messages","text","addMessage","bind","handleInput","deleteMessage","editMeaage","fetch","then","response","json","data","setState","event","this","target","name","value","id","options","method","headers","Cookies","get","index","findIndex","message","splice","catch","error","console","body","JSON","stringify","preventDefault","push","map","author","type","onClick","className","onSubmit","onChange","Component","Registration","username","email","password1","password2","handleSubmit","handleRegistration","class","for","required","placeholder","aria-describedby","Login","password","handleLogin","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","handleLogout","handleSelection","App","selection","user","a","log","handleError","warn","ok","set","key","err","remove","isAuth","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67b4f8dd.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass ChatList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      text: '',\n    }\n    this.addMessage = this.addMessage.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteMessage = this.deleteMessage.bind(this);\n    this.editMeaage = this.editMeaage.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/chats/')\n    .then(response => response.json())\n    .then(data => this.setState({ messages: data }));\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  deleteMessage(id) {\n    const options= {\n      method: 'DELETE',\n      headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  }\n    fetch(`/api/v1/chats/${id}/`, options)\n      .then(response => {\n      const messages = [...this.state.messages];\n      const index = messages.findIndex(message => message.id === id);\n      messages.splice(index, 1);\n      this.setState({ messages });\n\n      })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  }\n\n\n  editMeaage(id, text) {\n    const message = {\n      text: this.state.text,\n    };\n\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(message),\n    }\n    fetch(`/api/v1/chats/${id}/`, options)\n        .then(response => {\n          const messages = [...this.state.messages];\n          const index = messages.findIndex(message => message.id === id);\n          messages[index].text = text;\n          this.setState({ messages });\n        });\n    }\n\n  addMessage(event) {\n    event.preventDefault();\n    const message = {\n      text: this.state.text,\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(message),\n    }\n    fetch('/api/v1/chats/', options)\n      .then(response => response.json())\n      .then(data => {\n        const messages = [...this.state.messages];\n        messages.push(data);\n        this.setState({messages});\n      });\n\n    }\n\n    render() {\n      const messages= this.state.messages.map(message => (\n        <li key={message.id}>\n          <p>{message.author}</p>\n          <p>{message.text}</p>\n          <button type ='button' onClick={() => this.deleteMessage(message.id)}>delete</button>\n          <button type ='button' onClick={() => this.editMeaage(message.id)}>edit</button>\n        </li>\n      ));\n      return(\n        <>\n          <ul>{messages}</ul>\n          <section className=\"main\">\n            <form onSubmit={this.addMessage}>\n              <input  className=\"text\" type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput}/>\n              <button className=\"button\" type=\"submit\">Send Message</button>\n            </form>\n          </section>\n        </>\n      )\n    }\n}\n\nexport default ChatList;\n","import { Component } from 'react';\n// import Cookies from 'js-cookie';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    username: '',\n    email: '',\n    password1: '',\n    password2: '',\n\n  }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleRegistration(this.state)\n}\n\n\n  render() {\n    return (\n\n      <form onSubmit={this.handleSubmit}>\n        <div class=\"form-group\">\n          <label for=\"formGroupExampleInput2\">User Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"username\" required onChange={this.handleInput} value={this.state.username} id=\"formGroupExampleInput2\" placeholder=\"User Name\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\" class=\"form-control\" name=\"email\" required onChange={this.handleInput} value={this.state.email} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password1\" required onChange={this.handleInput} value={this.state.password1} id=\"exampleInputPassword1\" placeholder=\"Password\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password2\" required onChange={this.handleInput} value={this.state.password2} id=\"exampleInputPassword1\" placeholder=\"Password\" />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n      </form>\n    );\n  }\n}\nexport default Registration;\n","import { Component } from 'react';\n// import Cookies from 'js-cookie';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    username: '',\n    email: '',\n    password: '',\n\n  }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleLogin(this.state)\n}\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div class=\"form-group\">\n          <label for=\"formGroupExampleInput2\">User Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"username\" onChange={this.handleInput} value={this.state.username} id=\"formGroupExampleInput2\" placeholder=\"User Name\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\" class=\"form-control\" name=\"email\" onChange={this.handleInput} value={this.state.email} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password\" onChange={this.handleInput} value={this.state.password} id=\"exampleInputPassword1\" placeholder=\"Password\" />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n      </form>\n  );\n  }\n}\n\n\n\nexport default Login;\n","import { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n// import Button from 'react-bootstrap/Button';\n\nclass Navigation extends Component {\n  render() {\n    return(\n      <Navbar bg=\"light\" expand=\"lg\">\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <button className=\"btn\" onClick={() => this.props.handleLogout()}>Logout</button>\n            <button className=\"btn\" onClick={() => this.props.handleSelection('login')}>Login</button>\n            <button className=\"btn\" onClick={() => this.props.handleSelection('registration')}>Register</button>\n          </Nav>\n\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport ChatList from './components/ChatList.js';\nimport Registration from './components/Registration.js';\nimport Login from './components/Login.js';\nimport Navbar from './components/Navbar';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chats' : 'login'\n    }\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleSelection = this.handleSelection.bind(this);\n  }\n\n\n    async handleLogin(user) {\n      console.log(user)\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(user),\n      };\n      const handleError = (error) => console.warn(error);\n      const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n      if(response.ok) {\n        const data = await response.json().catch(handleError);\n        Cookies.set('Authorization', `Token ${data.key}`);\n        this.setState({ selection: 'chats' });\n      }\n    }\n      // console.log(data);\n    async handleRegistration(user) {\n\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(user),\n      };\n      const handleError = (error) => console.warn(error);\n      const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n\n      if(response.ok) {\n        const data = await response.json().catch(handleError);\n        Cookies.set('Authorization', `Token ${data.key}`);\n        this.setState({ selection: 'chats' });\n\n      }\n      // console.log(data);\n    }\n\n    async handleLogout(){\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      };\n        const handleError = (err) => console.warn(err);\n        const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n        if(response.ok) {\n          Cookies.remove('Authorization');\n          this.setState({ selection: 'login' });\n        }\n      }\n\n    async handleSelection(selection) {\n      this.setState({selection});\n    }\n\n  render() {\n\n    return(\n      <>\n\n        <Navbar handleLogout={this.handleLogout} isAuth={this.state.selection === 'chats'} handleSelection={this.handleSelection} />\n        {this.state.selection === 'chats' && <ChatList />}\n        {this.state.selection === 'registration' && <Registration handleRegistration={this.handleRegistration} handleSelection={this.handleSelection}/>}\n        {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleSelection={this.handleSelection}/> }\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}