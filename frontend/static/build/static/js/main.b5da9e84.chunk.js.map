{"version":3,"sources":["components/ChatList.js","components/Registration.js","components/Login.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatList","props","state","messages","text","addMessage","bind","handleInput","fetch","then","response","json","data","setState","event","this","target","name","value","message","options","method","headers","Cookies","get","body","JSON","stringify","messgaes","push","map","author","id","className","onSubmit","type","onChange","Component","Registration","username","email","password1","password2","handleSubmit","preventDefault","handleRegistration","required","Login","password","handleLogin","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","onClick","handleLogout","handleSelection","App","selection","user","a","console","log","handleError","error","warn","catch","ok","set","key","err","remove","isAuth","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5da9e84.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass ChatList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      text: '',\n    }\n    this.addMessage = this.addMessage.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/chats/')\n    .then(response => response.json())\n    .then(data => this.setState({ messages: data }));\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  addMessage(event) {\n    const message = {\n      text: this.state.text,\n    };\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n    body: JSON.stringify(message),\n    }\n    fetch('/api/v1/chats/', options)\n      .then(response => response.json())\n      .then(data => {\n        const messages = [...this.state.messgaes];\n        messages.push(data);\n        this.setState({messages});\n      });\n\n    }\n\n    render() {\n      const messages= this.state.messages.map(message => (\n        <li key={message.id}>\n          <p>{message.author}</p>\n          <p>{message.text}</p>\n\n        </li>\n      ));\n      return(\n        <>\n          <ul>{messages}</ul>\n          <section className=\"main\">\n            <form onSubmit={this.addMessage}>\n              <input  className=\"text\" type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput}/>\n              <button className=\"button\" type=\"submit\">Send Message</button>\n            </form>\n          </section>\n        </>\n      )\n    }\n}\n\nexport default ChatList;\n","import { Component } from 'react';\n// import Cookies from 'js-cookie';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    username: '',\n    email: '',\n    password1: '',\n    password2: '',\n\n  }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleRegistration(this.state)\n}\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"username\" onChange={this.handleInput} value={this.state.username} required />\n        <input type=\"email\" name=\"email\" required onChange ={this.handleInput} value={this.state.email}/>\n        <input type=\"password\" name=\"password1\" required onChange={this.handleInput} value={this.state.password1}/>\n        <input type=\"password\" name=\"password2\" required onChange={this.handleInput} value={this.state.password2}/>\n        <button type=\"submit\">Register</button>\n      </form>\n    );\n  }\n}\nexport default Registration;\n","import { Component } from 'react';\n// import Cookies from 'js-cookie';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    username: '',\n    email: '',\n    password: '',\n\n  }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleLogin(this.state)\n}\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"username\" onChange={this.handleInput} value={this.state.username}/>\n        <input type=\"email\" name=\"email\" onChange ={this.handleInput} value={this.state.email}/>\n        <input type=\"password\" name=\"password\" onChange={this.handleInput} value={this.state.password1}/>\n        <button type=\"submit\">Login</button>\n      </form>\n    );\n  }\n}\nexport default Login;\n","import { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n// import Button from 'react-bootstrap/Button';\n\nclass Navigation extends Component {\n  render() {\n    return(\n      <Navbar bg=\"light\" expand=\"lg\">\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <button className=\"btn\" onClick={() => this.props.handleLogout()}>Logout</button>\n            <button className=\"btn\" onClick={() => this.props.handleSelection('login')}>Login</button>\n            <button className=\"btn\" onClick={() => this.props.handleSelection('registration')}>Register</button>\n          </Nav>\n\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport ChatList from './components/ChatList.js';\nimport Registration from './components/Registration.js';\nimport Login from './components/Login.js';\nimport Navbar from './components/Navbar';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chats' : 'login'\n    }\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleSelection = this.handleSelection.bind(this);\n  }\n\n\n    async handleLogin(user) {\n      console.log(user)\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(user),\n      };\n      const handleError = (error) => console.warn(error);\n      const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n      if(response.ok) {\n        const data = await response.json().catch(handleError);\n        Cookies.set('Authorization', `Token ${data.key}`);\n        this.setState({ selection: 'chats' });\n      }\n    }\n      // console.log(data);\n    async handleRegistration(user) {\n\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(user),\n      };\n      const handleError = (error) => console.warn(error);\n      const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n\n      if(response.ok) {\n        const data = await response.json().catch(handleError);\n        Cookies.set('Authorization', `Token ${data.key}`);\n        this.setState({ selection: 'chats' });\n\n      }\n      // console.log(data);\n    }\n\n    async handleLogout(){\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n      };\n        const handleError = (err) => console.warn(err);\n        const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n        if(response.ok) {\n          Cookies.remove('Authorization');\n          this.setState({ selection: 'login' });\n        }\n      }\n\n    async handleSelection(selection) {\n      this.setState({selection});\n    }\n\n  render() {\n\n    return(\n      <>\n\n        <Navbar handleLogout={this.handleLogout} isAuth={this.state.selection === 'chats'} handleSelection={this.handleSelection} />\n        {this.state.selection === 'chats' && <ChatList />}\n        {this.state.selection === 'registration' && <Registration handleRegistration={this.handleRegistration} handleSelection={this.handleSelection}/>}\n        {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleSelection={this.handleSelection}/> }\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}